<?php

namespace AppBundle\Repository;

/**
 * MangaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MangaRepository extends \Doctrine\ORM\EntityRepository
{
  public function getDistinctStatus() {
    return $this->getDistinctBy("status");
  }
  public function getDistinctGenre() {
    return $this->getDistinctBy("genre");
  }
  public function getDistinctState() {
    return $this->getDistinctBy("state");
  }
  public function getDistinctBy($field) {
    $qb = $this->createQueryBuilder('m');
    $qb->select("m." . $field);
    $qb->where("m." . $field . " is not null");
    $qb->orderBy("m." . $field);
    $qb->distinct();
    $res = $qb->getQuery()->getResult();
    
    $tab = [];
    foreach ($res as $value) {
      $tab[$value[$field]] = $value[$field];
    }    
    return $tab;
  }
  public function getAll($name, $status, $genre, $author, $synopsis, $url, $state, $opinion) {
    $qb = $this->createQueryBuilder('m');
    $qb->orderBy("m.name", "asc");
    
    if($name != null) {
      $qb->andWhere("upper(m.name) like upper(:name)")->setParameter("name", "%".$name."%");
    }
    if($status != null) {
      $qb->andWhere("m.status = :status")->setParameter("status", $status);
    }
    if($genre != null) {
      $qb->andWhere("m.genre = :genre")->setParameter("genre", $genre);
    }
    if($author != null) {
      $qb->andWhere("upper(m.author) like upper(:author)")->setParameter("author", "%".$author."%");
    }
    if($synopsis != null) {
      $qb->andWhere("upper(m.synopsis) like upper(:synopsis)")->setParameter("synopsis", "%".$synopsis."%");
    }
    if($url != null) {
      $qb->andWhere("upper(m.url) like upper(:url)")->setParameter("url", "%".$url."%");
    }
    if($state != null) {
      $qb->andWhere("m.state = :state")->setParameter("state", $state);
    }
    if($opinion != null) {
      $qb->andWhere("upper(m.opinion) like upper(:opinion)")->setParameter("opinion", "%".$opinion."%");
    }
    
    return $qb->getQuery()->getResult();
  }
  
  
}
